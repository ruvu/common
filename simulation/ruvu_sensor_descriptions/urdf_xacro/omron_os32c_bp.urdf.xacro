<?xml version="1.0"?>
<!--
Copyright 2020 RUVU Robotics B.V.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:property name="M_PI" value="3.1415926535897931" />

    <xacro:macro name="omron_os32c_bp_model" params="name parent *origin">
      <joint name="${name}_joint" type="fixed">
        <xacro:insert_block name="origin" />
        <parent link="${parent}"/>
        <child link="${name}_frame"/>
      </joint>

      <material name="material_${name}_black_transparant">
        <color rgba="0 0 0 0.9"/>
      </material>

      <gazebo reference="${name}_frame">
        <material>Gazebo/FlatBlack</material>
      </gazebo>

      <link name="${name}_frame">
        <inertial>
          <mass value="0.270" />
          <origin xyz="0 0 0" rpy="0 0 0" />
          <inertia ixx="2.632e-4" ixy="0" ixz="0" iyy="2.632e-4" iyz="0" izz="1.62e-4" />
        </inertial>
        <visual>
          <origin xyz="-0.0904 -0.06 -0.018" rpy="${M_PI / 2} 0 ${M_PI / 2}" />
          <geometry>
            <mesh filename="package://ruvu_sensor_descriptions/meshes/omron_os32c_bp.stl" scale="0.001 0.001 0.001"/>
          </geometry>
          <material name="material_${name}_black_transparant"/>
        </visual>
        <collision>
          <origin xyz="0 0 -0.013" rpy="0 0 0" />
          <geometry>
            <cylinder radius="0.05215" length="0.1045" />
          </geometry>
        </collision>
      </link>

      <link name="${name}_optical_frame" />

      <joint name="${name}_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${M_PI} 0 0" />
        <parent link="${name}_frame"/>
        <child link="${name}_optical_frame"/>
      </joint>
    </xacro:macro>

    <xacro:macro name="omron_os32c_bp" params="name parent *origin ros_topic update_rate ray_count min_angle max_angle">
      <xacro:omron_os32c_bp_model name="${name}" parent="${parent}">
        <xacro:insert_block name="origin" />
      </xacro:omron_os32c_bp_model>

      <gazebo reference="${name}_frame">
        <sensor type="ray" name="${name}">
          <always_on>true</always_on>
          <update_rate>${update_rate}</update_rate>
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>${ray_count}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle * M_PI/180}</min_angle>
                <max_angle>${max_angle * M_PI/180}</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.08</min>
              <max>30.0</max>
              <resolution>0.01</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.004</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_${name}_controller" filename="libgazebo_ros_laser.so">
            <topicName>${ros_topic}</topicName>
            <frameName>${name}_frame</frameName>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:macro>

    <xacro:macro name="omron_os32c_bp_gpu" params="name parent *origin ros_topic update_rate ray_count min_angle max_angle">
      <xacro:omron_os32c_bp_model name="${name}" parent="${parent}">
        <xacro:insert_block name="origin" />
      </xacro:omron_os32c_bp_model>

      <gazebo reference="${name}_frame">
        <sensor type="gpu_ray" name="${name}">
          <update_rate>${update_rate}</update_rate>
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>${ray_count}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle * M_PI/180}</min_angle>
                <max_angle>${max_angle * M_PI/180}</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.08</min>
              <max>30.0</max>
              <resolution>0.01</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.004</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_${name}_controller" filename="libgazebo_ros_gpu_laser.so">
            <topicName>${ros_topic}</topicName>
            <frameName>${name}_frame</frameName>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:macro>
</robot>
