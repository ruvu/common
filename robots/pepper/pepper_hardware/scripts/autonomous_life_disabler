#!/usr/bin/env python

# MIT License
#
# Copyright (c) 2017 RUVU Robotics
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


import rospy
from pepper_hardware import QiSession


class AutonomousLifeDisabler(object):

    def __init__(self):
        self._session = QiSession()
        self._autonomous_life = self._session.get_service("ALAutonomousLife")

        dt = 1 / rospy.get_param("~frequency", 1.0)
        self._timer = rospy.Timer(rospy.Duration(dt), self._timer_callback)

    def _timer_callback(self, e):
        if self._autonomous_life.getState() != "disabled":
            rospy.logwarn("Autonomous life was enabled, disabling autonomouse life and exiting application ...")
            self._autonomous_life.setState("disabled")
            rospy.signal_shutdown("Autonomous life was enabled")


if __name__ == "__main__":
    rospy.init_node("autonomous_life_disabler")
    controller = AutonomousLifeDisabler()
    rospy.spin()
