#!/usr/bin/env python

# MIT License
#
# Copyright (c) 2017 RUVU Robotics
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import rospy
from pepper_hardware import QiSession
from std_srvs.srv import Empty


class Tablet(object):

    def __init__(self):
        """
        Tablet for the Pepper Robot, starts the tablet with a specific url
        """
        self._session = QiSession()
        self._tablet = self._session.get_service("ALTabletService")

        self._url = rospy.get_param("~url", 'http://google.com')
        self._load_url()

        self._reload_srv = rospy.Service('reload_url', Empty, self._reload_srv_callback)

    def _load_url(self):
        rospy.loginfo("Loading url '{}' ...".format(self._url))

        self._tablet.resetTablet()

        if self._tablet.loadUrl(self._url):
            self._tablet.showWebview()
            rospy.loginfo("Load url successful")
        else:
            rospy.logerr("Could not load url, showing tablet settings")
            self._tablet._openSettings()

    def _reload_srv_callback(self, req):
        self._load_url()
        return {}

if __name__ == "__main__":
    rospy.init_node("tablet")
    tablet = Tablet()
    rospy.spin()
